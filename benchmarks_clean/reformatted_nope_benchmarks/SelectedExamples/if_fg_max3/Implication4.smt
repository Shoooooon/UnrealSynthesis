;test
(set-info :smt-lib-version 2.6)
(set-info :status unsat)
(set-logic NIA)
(declare-const x_finitevscpy_1 Int)
(declare-const x_finitevscpy_2 Int)
(declare-const x_finitevscpy_3 Int)
(declare-const x_finitevscpy_4 Int)
(declare-const x_finitevscpy_5 Int)
(declare-const x_finitevscpy_6 Int)
(declare-const x_finitevscpy_7 Int)
(declare-const x_finitevscpy_8 Int)
(declare-const x_finitevscpy_9 Int)
(declare-const y_finitevscpy_1 Int)
(declare-const y_finitevscpy_2 Int)
(declare-const y_finitevscpy_3 Int)
(declare-const y_finitevscpy_4 Int)
(declare-const y_finitevscpy_5 Int)
(declare-const y_finitevscpy_6 Int)
(declare-const y_finitevscpy_7 Int)
(declare-const y_finitevscpy_8 Int)
(declare-const y_finitevscpy_9 Int)
(declare-const z_finitevscpy_1 Int)
(declare-const z_finitevscpy_2 Int)
(declare-const z_finitevscpy_3 Int)
(declare-const z_finitevscpy_4 Int)
(declare-const z_finitevscpy_5 Int)
(declare-const z_finitevscpy_6 Int)
(declare-const z_finitevscpy_7 Int)
(declare-const z_finitevscpy_8 Int)
(declare-const z_finitevscpy_9 Int)
(assert
(not
(=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and true (= x_finitevscpy_1 0)) (= y_finitevscpy_1 0)) (= z_finitevscpy_1 (- 1))) (= x_finitevscpy_2 0)) (= y_finitevscpy_2 0)) (= z_finitevscpy_2 2)) (= x_finitevscpy_3 0)) (= y_finitevscpy_3 3)) (= z_finitevscpy_3 0)) (= x_finitevscpy_4 0)) (= y_finitevscpy_4 1)) (= z_finitevscpy_4 1)) (= x_finitevscpy_5 1)) (= y_finitevscpy_5 0)) (= z_finitevscpy_5 0)) (= x_finitevscpy_6 1)) (= y_finitevscpy_6 0)) (= z_finitevscpy_6 1)) (= x_finitevscpy_7 1)) (= y_finitevscpy_7 1)) (= z_finitevscpy_7 0)) (= x_finitevscpy_8 (- 1))) (= y_finitevscpy_8 (- 1))) (= z_finitevscpy_8 (- 1))) (= x_finitevscpy_9 (- 1))) (= y_finitevscpy_9 0)) (= z_finitevscpy_9 (- 1))) (not (and (and (and (and (and (and (and (and (and true (= 1 0)) (= 1 2)) (= 1 3)) (= 1 1)) (= 1 1)) (= 1 1)) (= 1 1)) (= 1 (- 2))) (= 1 1))))
)
 )
(check-sat)
(exit)