;test
(set-info :smt-lib-version 2.6)
(set-info :status unsat)
(set-logic NIA)
(declare-const a Int)
(declare-const b Int)
(declare-const c Int)
(declare-const fresh1_finitevscpy_1 Int)
(declare-const fresh1_finitevscpy_2 Int)
(declare-const fresh1_finitevscpy_3 Int)
(declare-const x_finitevscpy_1 Int)
(declare-const x_finitevscpy_2 Int)
(declare-const x_finitevscpy_3 Int)
(declare-const y_finitevscpy_1 Int)
(declare-const y_finitevscpy_2 Int)
(declare-const y_finitevscpy_3 Int)
(assert
(not
(=> (and (and (and (and (and (and (and true (= x_finitevscpy_1 0)) (= y_finitevscpy_1 0)) (= x_finitevscpy_2 (- 4))) (= y_finitevscpy_2 0)) (= x_finitevscpy_3 5)) (= y_finitevscpy_3 (- 9))) (and (and (or (< 0 a) (= 0 a)) (and (or (< 0 b) (= 0 b)) (or (< 0 c) (= 0 c)))) (and (= (+ c (+ (* a x_finitevscpy_1) (* b y_finitevscpy_1))) fresh1_finitevscpy_1) (and (= (+ c (+ (* a x_finitevscpy_2) (* b y_finitevscpy_2))) fresh1_finitevscpy_2) (= (+ c (+ (* a x_finitevscpy_3) (* b y_finitevscpy_3))) fresh1_finitevscpy_3))))) (not (and (and (and true (= fresh1_finitevscpy_1 1)) (= fresh1_finitevscpy_2 (- 11))) (= fresh1_finitevscpy_3 15))))
)
 )
(check-sat)
(exit)