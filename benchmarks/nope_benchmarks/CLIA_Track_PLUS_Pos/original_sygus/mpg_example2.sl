(set-logic LIA)

( synth-fun eq1(      ( x  Int )  ( y  Int )  ( z  Int ) )  Int (
	(Start  Int (		x
		y
		z
		0
		1
		(ite NT4 NT1 NT1)
		(+ NT1 NT1)
		(ite NT3 NT1 NT1)
		(ite NT4 NT2 NT1)
		(ite NT4 NT1 NT2)
		(+ NT2 NT1)
		(ite NT3 NT2 NT1)
		(ite NT3 NT1 NT2)
		(ite NT4 NT2 NT2)
		(ite NT7 NT1 NT1)
		(ite NT4 NT5 NT1)
		(+ NT2 NT2)
		(+ NT5 NT1)
		(ite NT3 NT2 NT2)
		(ite NT3 NT5 NT1)
		(ite NT8 NT1 NT1)
		(ite NT4 NT6 NT1)
		(+ NT6 NT1)
		(ite NT3 NT6 NT1)
		(ite NT7 NT5 NT1)
		(ite NT7 NT1 NT5)
		(ite NT4 NT9 NT1)
		(ite NT14 NT1 NT1)
		(+ NT10 NT1)
		(ite NT3 NT10 NT1)
		(ite NT8 NT6 NT1)
		(ite NT8 NT1 NT6)
		(ite NT7 NT5 NT5)
		(ite NT15 NT1 NT1)
		(ite NT7 NT9 NT1)
		(ite NT4 NT12 NT1)
		(+ NT11 NT1)
		(ite NT3 NT11 NT1)
		(ite NT8 NT10 NT1)
		(ite NT7 NT12 NT1)
		(ite NT20 NT1 NT1)
		(ite NT4 NT18 NT1)
		(ite NT14 NT9 NT1)
		(ite NT14 NT1 NT9)
		(+ NT9 NT9)
		(ite NT4 NT13 NT1)
		(ite NT7 NT11 NT1)
		(+ NT18 NT1)
		(ite NT8 NT6 NT6)
		(ite NT8 NT12 NT1)
		(ite NT3 NT18 NT1)
		(ite NT22 NT1 NT1)
		(ite NT14 NT10 NT1)
		(ite NT14 NT1 NT10)
		(ite NT16 NT9 NT1)
		(ite NT16 NT1 NT9)
		(+ NT5 NT5)
		(+ NT9 NT1)
		(ite NT3 NT9 NT1)
		(ite NT4 NT10 NT1)
		(ite NT16 NT1 NT1)
		(+ NT6 NT6)
		(+ NT12 NT1)
		(ite NT4 NT11 NT1)
		(ite NT3 NT12 NT1)
		(ite NT8 NT9 NT1)
		(ite NT7 NT10 NT1)
		(ite NT17 NT1 NT1)
		(+ NT13 NT1)
		(ite NT3 NT13 NT1)
		(ite NT8 NT11 NT1)
		(ite NT21 NT1 NT1)
		(ite NT4 NT19 NT1)
		(ite NT15 NT9 NT1)
		(ite NT15 NT1 NT9)
		(ite NT7 NT18 NT1)
		(ite NT16 NT10 NT1)
		(ite NT14 NT12 NT1)
		(ite NT16 NT1 NT10)
		(ite NT14 NT1 NT12)
))
	(NT1  Int (x y z
		0
		1
		(ite NT4 NT1 NT1)
))
	(NT2  Int (		(+ NT1 NT1)
		(ite NT3 NT1 NT1)
		(ite NT4 NT2 NT1)
		(ite NT4 NT1 NT2)
))
	(NT3  Bool (		(<= NT1 NT1)
		(not NT3)
		(= NT2 NT1)
		(>= NT2 NT1)
))
	(NT4  Bool (		(= NT1 NT1)
		(>= NT1 NT1)
		(not NT4)
		(and NT4 NT4)
		(or NT4 NT4)
))
	(NT5  Int (		(+ NT2 NT1)
		(ite NT3 NT2 NT1)
		(ite NT3 NT1 NT2)
		(ite NT4 NT2 NT2)
		(ite NT7 NT1 NT1)
		(ite NT4 NT5 NT1)
))
	(NT6  Int (		(+ NT2 NT2)
		(+ NT5 NT1)
		(ite NT3 NT2 NT2)
		(ite NT3 NT5 NT1)
		(ite NT8 NT1 NT1)
		(ite NT4 NT6 NT1)
))
	(NT7  Bool (		(<= NT2 NT1)
		(= NT2 NT2)
		(>= NT2 NT2)
		(and NT3 NT3)
		(or NT3 NT3)
		(= NT5 NT1)
		(>= NT5 NT1)
		(not NT7)
))
	(NT8  Bool (		(<= NT2 NT2)
		(<= NT5 NT1)
		(= NT6 NT1)
		(>= NT6 NT1)
		(not NT8)
		(and NT7 NT3)
		(or NT7 NT3)
))
	(NT9  Int (		(+ NT6 NT1)
		(ite NT3 NT6 NT1)
		(ite NT7 NT5 NT1)
		(ite NT7 NT1 NT5)
		(ite NT4 NT9 NT1)
		(ite NT14 NT1 NT1)
))
	(NT10  Int (		(+ NT5 NT5)
		(+ NT9 NT1)
		(ite NT3 NT9 NT1)
		(ite NT4 NT10 NT1)
		(ite NT16 NT1 NT1)
))
	(NT11  Int (		(+ NT6 NT6)
		(+ NT12 NT1)
		(ite NT4 NT11 NT1)
		(ite NT3 NT12 NT1)
		(ite NT8 NT9 NT1)
		(ite NT7 NT10 NT1)
		(ite NT17 NT1 NT1)
))
	(NT12  Int (		(+ NT10 NT1)
		(ite NT3 NT10 NT1)
		(ite NT8 NT6 NT1)
		(ite NT8 NT1 NT6)
		(ite NT7 NT5 NT5)
		(ite NT15 NT1 NT1)
		(ite NT7 NT9 NT1)
		(ite NT4 NT12 NT1)
))
	(NT13  Int (		(+ NT9 NT9)
		(ite NT4 NT13 NT1)
		(ite NT7 NT11 NT1)
		(+ NT18 NT1)
		(ite NT8 NT6 NT6)
		(ite NT8 NT12 NT1)
		(ite NT3 NT18 NT1)
		(ite NT22 NT1 NT1)
		(ite NT14 NT10 NT1)
		(ite NT14 NT1 NT10)
		(ite NT16 NT9 NT1)
		(ite NT16 NT1 NT9)
))
	(NT14  Bool (		(<= NT6 NT1)
		(= NT5 NT5)
		(>= NT5 NT5)
		(= NT9 NT1)
		(>= NT9 NT1)
		(and NT8 NT3)
		(or NT8 NT3)
		(and NT7 NT7)
		(or NT7 NT7)
		(not NT14)
))
	(NT15  Bool (		(<= NT10 NT1)
		(= NT6 NT6)
		(>= NT6 NT6)
		(= NT12 NT1)
		(>= NT12 NT1)
		(not NT15)
		(and NT8 NT8)
		(or NT8 NT8)
		(and NT16 NT3)
		(or NT16 NT3)
))
	(NT16  Bool (		(<= NT5 NT5)
		(<= NT9 NT1)
		(= NT10 NT1)
		(>= NT10 NT1)
		(not NT16)
		(and NT14 NT3)
		(or NT14 NT3)
))
	(NT17  Bool (		(<= NT6 NT6)
		(= NT11 NT1)
		(>= NT11 NT1)
		(<= NT12 NT1)
		(not NT17)
		(and NT15 NT3)
		(or NT15 NT3)
))
	(NT18  Int (		(+ NT11 NT1)
		(ite NT3 NT11 NT1)
		(ite NT8 NT10 NT1)
		(ite NT7 NT12 NT1)
		(ite NT20 NT1 NT1)
		(ite NT4 NT18 NT1)
		(ite NT14 NT9 NT1)
		(ite NT14 NT1 NT9)
))
	(NT19  Int (		(+ NT13 NT1)
		(ite NT3 NT13 NT1)
		(ite NT8 NT11 NT1)
		(ite NT21 NT1 NT1)
		(ite NT4 NT19 NT1)
		(ite NT15 NT9 NT1)
		(ite NT15 NT1 NT9)
		(ite NT7 NT18 NT1)
		(ite NT16 NT10 NT1)
		(ite NT14 NT12 NT1)
		(ite NT16 NT1 NT10)
		(ite NT14 NT1 NT12)
))
	(NT20  Bool (		(<= NT11 NT1)
		(= NT9 NT9)
		(>= NT9 NT9)
		(= NT18 NT1)
		(>= NT18 NT1)
		(and NT17 NT3)
		(or NT17 NT3)
		(not NT20)
		(and NT14 NT14)
		(or NT14 NT14)
))
	(NT21  Bool (		(<= NT13 NT1)
		(= NT10 NT10)
		(>= NT10 NT10)
		(= NT19 NT1)
		(>= NT19 NT1)
		(not NT21)
		(and NT22 NT3)
		(or NT22 NT3)
		(and NT16 NT16)
		(or NT16 NT16)
))
	(NT22  Bool (		(= NT13 NT1)
		(>= NT13 NT1)
		(<= NT9 NT9)
		(<= NT18 NT1)
		(not NT22)
		(and NT20 NT3)
		(or NT20 NT3)
))
))

(define-fun iteB (( b1 Bool ) (b2 Bool ) (b3 Bool )) Bool ( or ( and b1 b2 ) ( and (not b1 ) b3 ) ) )
(define-fun plus2 ((b1 Int) (b2 Int)) Int ( + b1 b2))
(define-fun plus3 ((b1 Int) (b2 Int) (b3 Int)) Int ( +  ( + b1 b2) b3))
(define-fun plus4 ((b1 Int) (b2 Int) (b3 Int) (b4 Int)) Int ( +  ( plus3  b1 b2 b3) b4))
(define-fun plus5 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int)) Int (+  ( plus4 b1 b2 b3 b4) b5))
(define-fun plus6 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) ) Int (+  ( plus5 b1 b2 b3 b4  b5) b6  ))
(define-fun plus7 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) (b7 Int)) Int (+  ( plus6 b1 b2 b3 b4  b5 b6 ) b7  ))
(define-fun plus8 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) (b7 Int) (be Int)) Int (+  ( plus7 b1 b2 b3 b4  b5 b6 b7) be  ))
(define-fun plus9 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) (b7 Int) (be Int) (bn Int)) Int (+  ( plus8 b1 b2 b3 b4  b5 b6 b7 be) bn  ))

(define-fun or3 ((b1 Bool) (b2 Bool) (b3 Bool)) Bool ( or ( or b1 b2) b3))
(define-fun one-times  ((b1 Int )) Int b1)
(define-fun two-times  ((b1 Int )) Int ( plus2 b1 b1))
(define-fun three-times  ((b1 Int )) Int ( plus3 b1 b1 b1))
(define-fun five-times  ((b1 Int )) Int ( plus5 b1 b1 b1 b1 b1 ))
(define-fun seven-times ((b1 Int )) Int ( plus7 b1 b1 b1 b1 b1 b1 b1 ))
(define-fun nine-times  ((b1 Int )) Int ( plus9 b1 b1 b1 b1 b1 b1 b1 b1 b1))
(define-fun ten-times  ((b1 Int )) Int ( plus9 b1 b1 b1 b1 b1 b1 b1 b1 ( plus2 b1 b1 )))
(define-fun minus ((b1 Int)) Int ( - 0  b1 ))

(declare-var x Int ) 
(declare-var y Int ) 
(declare-var z Int ) 

; if ( 2x -3 <= -2y +4 + z) then min(x,y,z) else max(x,y,z) endif

( constraint (  iteB ( <=  (  plus2 ( two-times x ) ( minus 3 ) )   ( plus3 z  ( minus ( two-times y ) )  4    ) ) (  >=  ( eq1 x y z )  x )  ( <= (eq1 x y z ) x ) ) )
( constraint (  iteB ( <=  (  plus2 ( two-times x ) ( minus 3 ) )   ( plus3 z  ( minus ( two-times y ) )  4    ) ) (  >=  ( eq1 x y z )  y )  ( <= (eq1 x y z ) y ) ) )
( constraint (  iteB ( <=  (  plus2 ( two-times x ) ( minus 3 ) )   ( plus3 z  ( minus ( two-times y ) )  4    ) ) (  >=  ( eq1 x y z )  z )  ( <= (eq1 x y z ) z ) ) )
( constraint (  or3 (  =  ( eq1 x y z )  x ) (  =  ( eq1 x y z )  y ) (  =  ( eq1 x y z )  z ) ) )


(check-synth)
