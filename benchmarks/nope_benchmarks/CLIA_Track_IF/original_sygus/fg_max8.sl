
(set-logic LIA)
( synth-fun max8  (           ( x1  Int )  ( x2  Int )  ( x3  Int )  ( x4  Int )  ( x5  Int )  ( x6  Int )  ( x7  Int )  ( x8  Int ) )  Int (
	(Start  Int (		x1
		x2
		x3
		x4
		x5
		x6
		x7
		x8
		0
		1
		(+ NT1 NT1)
		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
		(+ NT4 NT4)
		(+ NT7 NT1)
		(ite NT5 NT4 NT1)
		(ite NT5 NT1 NT4)
		(ite NT2 NT8 NT1)
		(ite NT12 NT1 NT1)
		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT8 NT1)
		(+ NT9 NT1)
		(ite NT2 NT7 NT1)
		(ite NT6 NT4 NT1)
		(ite NT6 NT1 NT4)
		(ite NT11 NT1 NT1)
		(ite NT5 NT8 NT1)
		(+ NT10 NT1)
		(ite NT2 NT9 NT1)
		(ite NT5 NT4 NT4)
		(ite NT5 NT7 NT1)
		(ite NT6 NT8 NT1)
		(ite NT13 NT1 NT1)
		(+ NT8 NT8)
))
	(NT1  Int (		x1
		x2
		x3
		x4
		x5
		x6
		x7
		x8
		0
		1
		(+ NT1 NT1)
))
	(NT2  Bool (		(<= NT1 NT1)
		(not NT2)
		(and NT2 NT2)
		(or NT2 NT2)
))
	(NT3  Int (		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
))
	(NT4  Int (		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
))
	(NT5  Bool (		(<= NT3 NT1)
		(not NT5)
		(and NT5 NT2)
		(or NT5 NT2)
))
	(NT6  Bool (		(<= NT4 NT1)
		(<= NT3 NT3)
		(not NT6)
		(and NT6 NT2)
		(or NT6 NT2)
		(and NT5 NT5)
		(or NT5 NT5)
))
	(NT7  Int (		(+ NT4 NT4)
		(+ NT7 NT1)
		(ite NT5 NT4 NT1)
		(ite NT5 NT1 NT4)
		(ite NT2 NT8 NT1)
		(ite NT12 NT1 NT1)
))
	(NT8  Int (		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT8 NT1)
))
	(NT9  Int (		(+ NT9 NT1)
		(ite NT2 NT7 NT1)
		(ite NT6 NT4 NT1)
		(ite NT6 NT1 NT4)
		(ite NT11 NT1 NT1)
		(ite NT5 NT8 NT1)
))
	(NT10  Int (		(+ NT10 NT1)
		(ite NT2 NT9 NT1)
		(ite NT5 NT4 NT4)
		(ite NT5 NT7 NT1)
		(ite NT6 NT8 NT1)
		(ite NT13 NT1 NT1)
		(+ NT8 NT8)
))
	(NT11  Bool (		(<= NT4 NT4)
		(<= NT7 NT1)
		(not NT11)
		(and NT6 NT6)
		(or NT6 NT6)
		(and NT11 NT2)
		(or NT11 NT2)
))
	(NT12  Bool (		(<= NT8 NT1)
		(not NT12)
		(and NT12 NT2)
		(or NT12 NT2)
))
	(NT13  Bool (		(<= NT9 NT1)
		(not NT13)
		(and NT13 NT2)
		(or NT13 NT2)
))
))

(declare-var x1 Int)
(declare-var x2 Int)
(declare-var x3 Int)
(declare-var x4 Int)
(declare-var x5 Int)
(declare-var x6 Int)
(declare-var x7 Int)
(declare-var x8 Int)

(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x1))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x2))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x3))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x4))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x5))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x6))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x7))
(constraint (>= (max8 x1 x2 x3 x4 x5 x6 x7 x8) x8))


(constraint (or (= x1 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
            (or (= x2 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
            (or (= x3 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
            (or (= x4 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
            (or (= x5 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
            (or (= x6 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
            (or (= x7 (max8 x1 x2 x3 x4 x5 x6 x7 x8))
	        (= x8 (max8 x1 x2 x3 x4 x5 x6 x7 x8))))))))))

(check-synth)


